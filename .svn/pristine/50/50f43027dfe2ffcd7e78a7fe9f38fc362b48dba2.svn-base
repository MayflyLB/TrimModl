//==============================================================================
//  WARNING!!  This file is overwritten by the Block Styler while generating
//  the automation code. Any modifications to this file will be lost after
//  generating the code again.
//
//       Filename:  E:\UGProFiles\Application\TestFun.hpp
//
//        This file was generated by the NX Block Styler
//        Created by: liban
//              Version: NX 8.5
//              Date: 03-31-2017  (Format: mm-dd-yyyy)
//              Time: 08:59
//
//==============================================================================

#ifndef TESTFUN_H_INCLUDED
#define TESTFUN_H_INCLUDED

//------------------------------------------------------------------------------
//These includes are needed for the following template code
//------------------------------------------------------------------------------
#include <uf_defs.h>
#include <uf_ui_types.h>
#include <iostream>
#include <NXOpen/Session.hxx>
#include <NXOpen/UI.hxx>
#include <NXOpen/NXMessageBox.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXException.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_BlockDialog.hxx>
#include <NXOpen/BlockStyler_PropertyList.hxx>
#include <NXOpen/BlockStyler_Group.hxx>
#include <NXOpen/BlockStyler_CurveCollector.hxx>
#include <NXOpen/BlockStyler_Button.hxx>
#include "../../include/assistfun.h"


using namespace std;
using namespace NXOpen;
using namespace NXOpen::BlockStyler;

class DllExport TestFun
{
    // class members
public:
    static Session *theSession;
    static UI *theUI;
    TestFun();
    ~TestFun();
    int Show();
    

    void initialize_cb();
    void dialogShown_cb();
    int apply_cb();
    int ok_cb();
    int update_cb(NXOpen::BlockStyler::UIBlock* block);
    PropertyList* GetBlockProperties(const char *blockID);
    
private:
    const char* theDlxFileName;
    NXOpen::BlockStyler::BlockDialog* theDialog;
    NXOpen::BlockStyler::Group* group0;// Block type: Group
    NXOpen::BlockStyler::CurveCollector* edge_select0;// Block type: Curve Collector
    NXOpen::BlockStyler::Button* button0;// Block type: Button
	NXOpen::BlockStyler::Button* button01;// Block type: Buttons
    std::vector<NXOpen::TaggedObject *>tempObj;

	vector<tag_t>  curves;
	vector<vector<CurveData>> m_simplePro_;
	vector<vccdata> m_trimVCC;
	vector<CurveData> m_vertexPts;
	bool st_isTrimLClose;
    
};
#endif //TESTFUN_H_INCLUDED
